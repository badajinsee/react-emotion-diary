{"ast":null,"code":"var _jsxFileName = \"/Users/hansunjin/Documents/emotion-diary/src/components/DiaryEditor.js\",\n  _s = $RefreshSig$();\nimport { useContext, useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { DiaryDispatchContext } from \"./../App.js\";\nimport MyHeader from \"./MyHeader\";\nimport MyButton from \"./MyButton\";\nimport Emotionitem from \"./Emotionitem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emotionList = [{\n  emotion_id: 1,\n  emotion_img: process.env.PUBLIC_URL + `/assets/emotion1.png`,\n  emotion_descript: \"완전 좋음\"\n}, {\n  emotion_id: 2,\n  emotion_img: process.env.PUBLIC_URL + `/assets/emotion2.png`,\n  emotion_descript: \"좋음\"\n}, {\n  emotion_id: 3,\n  emotion_img: process.env.PUBLIC_URL + `/assets/emotion3.png`,\n  emotion_descript: \"그럭저럭\"\n}, {\n  emotion_id: 4,\n  emotion_img: process.env.PUBLIC_URL + `/assets/emotion4.png`,\n  emotion_descript: \"나쁨\"\n}, {\n  emotion_id: 5,\n  emotion_img: process.env.PUBLIC_URL + `/assets/emotion5.png`,\n  emotion_descript: \"끔찍함\"\n}];\n\n// const getStringDate = (date) => {\n//   return date.toISOString().slice(0, 10);\n// };\n\nexport const getStringDate = date => {\n  let year = date.getFullYear();\n  let month = date.getMonth() + 1;\n  let day = date.getDate();\n  if (month < 10) {\n    month = `0${month}`;\n  }\n  if (day < 10) {\n    day = `0${day}`;\n  }\n  return `${year}-${month}-${day}`;\n};\nconst DiaryEditor = () => {\n  _s();\n  const contentRef = useRef();\n  const [content, setContent] = useState(\"\");\n  const [emotion, setEmotion] = useState(3);\n  const [date, setDate] = useState(getStringDate(new Date()));\n  const {\n    onCreate\n  } = useContext(DiaryDispatchContext);\n  const handleClickEmote = emotion => {\n    setEmotion(emotion);\n  };\n  const hadleSubmit = () => {\n    if (content.length < 1) {\n      contentRef.current.focus();\n    }\n    onCreate(date, content, emotion);\n  };\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DiaryEditor\",\n    children: [/*#__PURE__*/_jsxDEV(MyHeader, {\n      headText: \"새 일기쓰기\",\n      leftChild: /*#__PURE__*/_jsxDEV(MyButton, {\n        text: \"< 뒤로가기\",\n        onClick: () => navigate(-1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC624\\uB298\\uC740 \\uC5B8\\uC81C\\uC778\\uAC00\\uC694?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_box\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input_date\",\n            value: date,\n            onChange: e => setDate(e.target.value),\n            type: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC624\\uB298\\uC758 \\uAC10\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_box emotion_list_wrapper\",\n          children: emotionList.map(it => /*#__PURE__*/_jsxDEV(Emotionitem, {\n            ...it,\n            onClick: handleClickEmote,\n            isSelected: it.emotion_id === emotion\n          }, it.emotion_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC624\\uB298\\uC758 \\uC77C\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_box text_wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"\\uC624\\uB298\\uC740 \\uC5B4\\uB560\\uB098\\uC694\",\n            ref: contentRef,\n            value: content,\n            onChange: e => setContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control_box\",\n          children: [/*#__PURE__*/_jsxDEV(MyButton, {\n            text: \"취소하기\",\n            onClick: () => navigate(-1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n            text: \"작성완료\",\n            type: \"positive\",\n            onClick: () => {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(DiaryEditor, \"LCLldGxtvLnzF0W11eOeshou5F4=\", false, function () {\n  return [useNavigate];\n});\n_c = DiaryEditor;\nexport default DiaryEditor;\nvar _c;\n$RefreshReg$(_c, \"DiaryEditor\");","map":{"version":3,"names":["useContext","useRef","useState","useNavigate","DiaryDispatchContext","MyHeader","MyButton","Emotionitem","jsxDEV","_jsxDEV","emotionList","emotion_id","emotion_img","process","env","PUBLIC_URL","emotion_descript","getStringDate","date","year","getFullYear","month","getMonth","day","getDate","DiaryEditor","_s","contentRef","content","setContent","emotion","setEmotion","setDate","Date","onCreate","handleClickEmote","hadleSubmit","length","current","focus","navigate","className","children","headText","leftChild","text","onClick","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","map","it","isSelected","placeholder","ref","_c","$RefreshReg$"],"sources":["/Users/hansunjin/Documents/emotion-diary/src/components/DiaryEditor.js"],"sourcesContent":["import { useContext, useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { DiaryDispatchContext } from \"./../App.js\";\n\nimport MyHeader from \"./MyHeader\";\nimport MyButton from \"./MyButton\";\nimport Emotionitem from \"./Emotionitem\";\n\nconst emotionList = [\n  {\n    emotion_id: 1,\n    emotion_img: process.env.PUBLIC_URL + `/assets/emotion1.png`,\n    emotion_descript: \"완전 좋음\",\n  },\n  {\n    emotion_id: 2,\n    emotion_img: process.env.PUBLIC_URL + `/assets/emotion2.png`,\n    emotion_descript: \"좋음\",\n  },\n  {\n    emotion_id: 3,\n    emotion_img: process.env.PUBLIC_URL + `/assets/emotion3.png`,\n    emotion_descript: \"그럭저럭\",\n  },\n  {\n    emotion_id: 4,\n    emotion_img: process.env.PUBLIC_URL + `/assets/emotion4.png`,\n    emotion_descript: \"나쁨\",\n  },\n  {\n    emotion_id: 5,\n    emotion_img: process.env.PUBLIC_URL + `/assets/emotion5.png`,\n    emotion_descript: \"끔찍함\",\n  },\n];\n\n// const getStringDate = (date) => {\n//   return date.toISOString().slice(0, 10);\n// };\n\nexport const getStringDate = (date) => {\n  let year = date.getFullYear();\n\n  let month = date.getMonth() + 1;\n\n  let day = date.getDate();\n\n  if (month < 10) {\n    month = `0${month}`;\n  }\n\n  if (day < 10) {\n    day = `0${day}`;\n  }\n\n  return `${year}-${month}-${day}`;\n};\n\nconst DiaryEditor = () => {\n  const contentRef = useRef();\n  const [content, setContent] = useState(\"\");\n  const [emotion, setEmotion] = useState(3);\n  const [date, setDate] = useState(getStringDate(new Date()));\n\n  const { onCreate } = useContext(DiaryDispatchContext);\n\n  const handleClickEmote = (emotion) => {\n    setEmotion(emotion);\n  };\n\n  const hadleSubmit = () => {\n    if (content.length < 1) {\n      contentRef.current.focus();\n    }\n    onCreate(date, content, emotion);\n  };\n\n  const navigate = useNavigate();\n  return (\n    <div className=\"DiaryEditor\">\n      <MyHeader\n        headText={\"새 일기쓰기\"}\n        leftChild={\n          <MyButton text={\"< 뒤로가기\"} onClick={() => navigate(-1)} />\n        }\n      />\n      <div>\n        <section>\n          <h4>오늘은 언제인가요?</h4>\n          <div className=\"input_box\">\n            <input\n              className=\"input_date\"\n              value={date}\n              onChange={(e) => setDate(e.target.value)}\n              type=\"date\"\n            />\n          </div>\n        </section>\n        <section>\n          <h4>오늘의 감정</h4>\n          <div className=\"input_box emotion_list_wrapper\">\n            {emotionList.map((it) => (\n              <Emotionitem\n                key={it.emotion_id}\n                {...it}\n                onClick={handleClickEmote}\n                isSelected={it.emotion_id === emotion}\n              />\n            ))}\n          </div>\n        </section>\n        <section>\n          <h4>오늘의 일기</h4>\n          <div className=\"input_box text_wrapper\">\n            <textarea\n              placeholder=\"오늘은 어땠나요\"\n              ref={contentRef}\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n            />\n          </div>\n        </section>\n        <section>\n          <div className=\"control_box\">\n            <MyButton text={\"취소하기\"} onClick={() => navigate(-1)} />\n            <MyButton text={\"작성완료\"} type={\"positive\"} onClick={() => {}} />\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default DiaryEditor;\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACpD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,oBAAoB,QAAQ,aAAa;AAElD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAG,CAClB;EACEC,UAAU,EAAE,CAAC;EACbC,WAAW,EAAEC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAI,sBAAqB;EAC5DC,gBAAgB,EAAE;AACpB,CAAC,EACD;EACEL,UAAU,EAAE,CAAC;EACbC,WAAW,EAAEC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAI,sBAAqB;EAC5DC,gBAAgB,EAAE;AACpB,CAAC,EACD;EACEL,UAAU,EAAE,CAAC;EACbC,WAAW,EAAEC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAI,sBAAqB;EAC5DC,gBAAgB,EAAE;AACpB,CAAC,EACD;EACEL,UAAU,EAAE,CAAC;EACbC,WAAW,EAAEC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAI,sBAAqB;EAC5DC,gBAAgB,EAAE;AACpB,CAAC,EACD;EACEL,UAAU,EAAE,CAAC;EACbC,WAAW,EAAEC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAI,sBAAqB;EAC5DC,gBAAgB,EAAE;AACpB,CAAC,CACF;;AAED;AACA;AACA;;AAEA,OAAO,MAAMC,aAAa,GAAIC,IAAI,IAAK;EACrC,IAAIC,IAAI,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC;EAE7B,IAAIC,KAAK,GAAGH,IAAI,CAACI,QAAQ,CAAC,CAAC,GAAG,CAAC;EAE/B,IAAIC,GAAG,GAAGL,IAAI,CAACM,OAAO,CAAC,CAAC;EAExB,IAAIH,KAAK,GAAG,EAAE,EAAE;IACdA,KAAK,GAAI,IAAGA,KAAM,EAAC;EACrB;EAEA,IAAIE,GAAG,GAAG,EAAE,EAAE;IACZA,GAAG,GAAI,IAAGA,GAAI,EAAC;EACjB;EAEA,OAAQ,GAAEJ,IAAK,IAAGE,KAAM,IAAGE,GAAI,EAAC;AAClC,CAAC;AAED,MAAME,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,UAAU,GAAG1B,MAAM,CAAC,CAAC;EAC3B,MAAM,CAAC2B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC4B,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACgB,IAAI,EAAEc,OAAO,CAAC,GAAG9B,QAAQ,CAACe,aAAa,CAAC,IAAIgB,IAAI,CAAC,CAAC,CAAC,CAAC;EAE3D,MAAM;IAAEC;EAAS,CAAC,GAAGlC,UAAU,CAACI,oBAAoB,CAAC;EAErD,MAAM+B,gBAAgB,GAAIL,OAAO,IAAK;IACpCC,UAAU,CAACD,OAAO,CAAC;EACrB,CAAC;EAED,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIR,OAAO,CAACS,MAAM,GAAG,CAAC,EAAE;MACtBV,UAAU,CAACW,OAAO,CAACC,KAAK,CAAC,CAAC;IAC5B;IACAL,QAAQ,CAAChB,IAAI,EAAEU,OAAO,EAAEE,OAAO,CAAC;EAClC,CAAC;EAED,MAAMU,QAAQ,GAAGrC,WAAW,CAAC,CAAC;EAC9B,oBACEM,OAAA;IAAKgC,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BjC,OAAA,CAACJ,QAAQ;MACPsC,QAAQ,EAAE,QAAS;MACnBC,SAAS,eACPnC,OAAA,CAACH,QAAQ;QAACuC,IAAI,EAAE,QAAS;QAACC,OAAO,EAAEA,CAAA,KAAMN,QAAQ,CAAC,CAAC,CAAC;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACzD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACFzC,OAAA;MAAAiC,QAAA,gBACEjC,OAAA;QAAAiC,QAAA,gBACEjC,OAAA;UAAAiC,QAAA,EAAI;QAAU;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnBzC,OAAA;UAAKgC,SAAS,EAAC,WAAW;UAAAC,QAAA,eACxBjC,OAAA;YACEgC,SAAS,EAAC,YAAY;YACtBU,KAAK,EAAEjC,IAAK;YACZkC,QAAQ,EAAGC,CAAC,IAAKrB,OAAO,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YACzCI,IAAI,EAAC;UAAM;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACVzC,OAAA;QAAAiC,QAAA,gBACEjC,OAAA;UAAAiC,QAAA,EAAI;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACfzC,OAAA;UAAKgC,SAAS,EAAC,gCAAgC;UAAAC,QAAA,EAC5ChC,WAAW,CAAC8C,GAAG,CAAEC,EAAE,iBAClBhD,OAAA,CAACF,WAAW;YAAA,GAENkD,EAAE;YACNX,OAAO,EAAEX,gBAAiB;YAC1BuB,UAAU,EAAED,EAAE,CAAC9C,UAAU,KAAKmB;UAAQ,GAHjC2B,EAAE,CAAC9C,UAAU;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAInB,CACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACVzC,OAAA;QAAAiC,QAAA,gBACEjC,OAAA;UAAAiC,QAAA,EAAI;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACfzC,OAAA;UAAKgC,SAAS,EAAC,wBAAwB;UAAAC,QAAA,eACrCjC,OAAA;YACEkD,WAAW,EAAC,6CAAU;YACtBC,GAAG,EAAEjC,UAAW;YAChBwB,KAAK,EAAEvB,OAAQ;YACfwB,QAAQ,EAAGC,CAAC,IAAKxB,UAAU,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK;UAAE;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACVzC,OAAA;QAAAiC,QAAA,eACEjC,OAAA;UAAKgC,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BjC,OAAA,CAACH,QAAQ;YAACuC,IAAI,EAAE,MAAO;YAACC,OAAO,EAAEA,CAAA,KAAMN,QAAQ,CAAC,CAAC,CAAC;UAAE;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvDzC,OAAA,CAACH,QAAQ;YAACuC,IAAI,EAAE,MAAO;YAACU,IAAI,EAAE,UAAW;YAACT,OAAO,EAAEA,CAAA,KAAM,CAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CAzEID,WAAW;EAAA,QAmBEtB,WAAW;AAAA;AAAA0D,EAAA,GAnBxBpC,WAAW;AA2EjB,eAAeA,WAAW;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}